'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CurrentRefinements = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _reactInstantsearchCore = require('react-instantsearch-core');

var _utils = require('../core/utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var cx = (0, _utils.createClassNames)('CurrentRefinements');

var CurrentRefinements = exports.CurrentRefinements = function CurrentRefinements(_ref) {
  var items = _ref.items,
      canRefine = _ref.canRefine,
      refine = _ref.refine,
      translate = _ref.translate,
      className = _ref.className;
  return _react2.default.createElement(
    'div',
    { className: (0, _classnames2.default)(cx('', !canRefine && '-noRefinement'), className) },
    _react2.default.createElement(
      'ul',
      { className: cx('list', !canRefine && 'list--noRefinement') },
      items.map(function (item) {
        return _react2.default.createElement(
          'li',
          { key: item.label, className: cx('item') },
          _react2.default.createElement(
            'span',
            { className: cx('label') },
            item.label
          ),
          item.items ? item.items.map(function (nest) {
            return _react2.default.createElement(
              'span',
              { key: nest.label, className: cx('category') },
              _react2.default.createElement(
                'span',
                { className: cx('categoryLabel') },
                nest.label
              ),
              _react2.default.createElement(
                'button',
                {
                  className: cx('delete'),
                  onClick: function onClick() {
                    return refine(nest.value);
                  }
                },
                translate('clearFilter', nest)
              )
            );
          }) : _react2.default.createElement(
            'span',
            { className: cx('category') },
            _react2.default.createElement(
              'button',
              {
                className: cx('delete'),
                onClick: function onClick() {
                  return refine(item.value);
                }
              },
              translate('clearFilter', item)
            )
          )
        );
      })
    )
  );
};

var itemPropTypes = _propTypes2.default.arrayOf(_propTypes2.default.shape({
  label: _propTypes2.default.string.isRequired,
  value: _propTypes2.default.func.isRequired,
  items: function items() {
    return itemPropTypes.apply(undefined, arguments);
  }
}));

CurrentRefinements.propTypes = {
  items: itemPropTypes.isRequired,
  canRefine: _propTypes2.default.bool.isRequired,
  refine: _propTypes2.default.func.isRequired,
  translate: _propTypes2.default.func.isRequired,
  className: _propTypes2.default.string
};

CurrentRefinements.defaultProps = {
  className: ''
};

exports.default = (0, _reactInstantsearchCore.translatable)({
  clearFilter: 'âœ•'
})(CurrentRefinements);