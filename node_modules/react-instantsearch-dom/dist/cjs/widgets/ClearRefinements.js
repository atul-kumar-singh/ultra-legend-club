'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactInstantsearchCore = require('react-instantsearch-core');

var _PanelCallbackHandler = require('../components/PanelCallbackHandler');

var _PanelCallbackHandler2 = _interopRequireDefault(_PanelCallbackHandler);

var _ClearRefinements = require('../components/ClearRefinements');

var _ClearRefinements2 = _interopRequireDefault(_ClearRefinements);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The ClearRefinements widget displays a button that lets the user clean every refinement applied
 * to the search.
 * @name ClearRefinements
 * @kind widget
 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
 * @propType {boolean} [clearsQuery=false] - Pass true to also clear the search query
 * @themeKey ais-ClearRefinements - the root div of the widget
 * @themeKey ais-ClearRefinements-button - the clickable button
 * @themeKey ais-ClearRefinements-button--disabled - the disabled clickable button
 * @translationKey reset - the clear all button value
 * @example
 * import React from 'react';
 * import { InstantSearch, ClearRefinements, RefinementList } from 'react-instantsearch-dom';
 *
 * const App = () => (
 *   <InstantSearch
 *     appId="latency"
 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
 *     indexName="ikea"
 *   >
 *     <ClearRefinements />
 *     <RefinementList
 *       attribute="colors"
 *       defaultRefinement={['Black']}
 *     />
 *   </InstantSearch>
 * );
 */

var ClearRefinementsWidget = function ClearRefinementsWidget(props) {
  return _react2.default.createElement(
    _PanelCallbackHandler2.default,
    props,
    _react2.default.createElement(_ClearRefinements2.default, props)
  );
};

exports.default = (0, _reactInstantsearchCore.connectCurrentRefinements)(ClearRefinementsWidget);